<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on JenG</title>
    <link>/tags/docker/</link>
    <description>Recent content in docker on JenG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 26 Aug 2021 17:41:58 +0800</lastBuildDate><atom:link href="/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用docker构建postman自动化测试环境</title>
      <link>/posts/%E4%BD%BF%E7%94%A8docker%E6%9E%84%E5%BB%BApostman%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Thu, 26 Aug 2021 17:41:58 +0800</pubDate>
      
      <guid>/posts/%E4%BD%BF%E7%94%A8docker%E6%9E%84%E5%BB%BApostman%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83/</guid>
      <description>在 golang:1.14.4-alpine3.12 镜像基础上添加 gcc 如果你的镜像已经有了 gcc，则第一步，第二步跳过 第一步，编写 Dockerfile 文件 内容如下： FROM golang:1.14.4-alpine3.12 apk update apk add build-base 第二步 构建 coo-base 镜像 执行命令 docker build -t coo-base . 执行完毕之后，就会生成 coo-base 镜像，使用 docker images 查看 第三步 在 coo-base 镜像</description>
    </item>
    
    <item>
      <title>Docker创建mysql</title>
      <link>/posts/docker%E5%88%9B%E5%BB%BAmysql/</link>
      <pubDate>Fri, 04 Jun 2021 10:13:45 +0800</pubDate>
      
      <guid>/posts/docker%E5%88%9B%E5%BB%BAmysql/</guid>
      <description>docker run -p 3306:3306 -v /home/zzg/docker/mysql/data:/var/lib/mysql -v /home/zzg/docker/mysql/conf:/etc/mysql/conf.d &amp;ndash;name mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.6</description>
    </item>
    
    <item>
      <title>手工构建最基本的swoole镜像(基于alpine、PHP7)</title>
      <link>/posts/%E6%89%8B%E5%B7%A5%E6%9E%84%E5%BB%BA%E6%9C%80%E5%9F%BA%E6%9C%AC%E7%9A%84swoole%E9%95%9C%E5%83%8F%E5%9F%BA%E4%BA%8Ealpinephp7/</link>
      <pubDate>Fri, 28 May 2021 09:28:47 +0800</pubDate>
      
      <guid>/posts/%E6%89%8B%E5%B7%A5%E6%9E%84%E5%BB%BA%E6%9C%80%E5%9F%BA%E6%9C%AC%E7%9A%84swoole%E9%95%9C%E5%83%8F%E5%9F%BA%E4%BA%8Ealpinephp7/</guid>
      <description>docker run -it --rm php:7.3-alpine3.8 php -v run运行 it交互式 &amp;ndash;rm容器停止删除 php:7.3-alpine3.8 运行哪个容器哪个标签 php -v 执行命令** 进入docker容器 docker attach xxx 运行多条命令 docker run -it --rm php:7.3-alpine3.8 sh -c &amp;#34;php -v &amp;amp;&amp;amp; php -m&amp;#34; 启动一容器并且执行sh docker run -it --rm php:7.3-alpine3.8 sh 容</description>
    </item>
    
  </channel>
</rss>
