<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>k8s on JenG</title>
    <link>/tags/k8s/</link>
    <description>Recent content in k8s on JenG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 12 Jun 2021 14:44:31 +0800</lastBuildDate><atom:link href="/tags/k8s/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Helm入门</title>
      <link>/posts/helm%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sat, 12 Jun 2021 14:44:31 +0800</pubDate>
      
      <guid>/posts/helm%E5%85%A5%E9%97%A8/</guid>
      <description>安装 到 github 去下载对应的二进制文件 https://github.com/helm/helm 这里我们下载 3.6 版本 把可执行文件移动到 /usr/local/bin/helm 查看版本 helm version 看到版本信息即可安装成功 准备好 Helm 后，您可以添加图表存储库。检查 Artifact Hub 以获取可用的 Helm 图表存储库 helm repo add stable http://mirror.azure.cn/kubernetes/charts/ helm repo update 查找mysq</description>
    </item>
    
    <item>
      <title>数据卷：挂载本地文件夹</title>
      <link>/posts/%E6%95%B0%E6%8D%AE%E5%8D%B7%E6%8C%82%E8%BD%BD%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%A4%B9/</link>
      <pubDate>Sat, 12 Jun 2021 08:01:23 +0800</pubDate>
      
      <guid>/posts/%E6%95%B0%E6%8D%AE%E5%8D%B7%E6%8C%82%E8%BD%BD%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%A4%B9/</guid>
      <description>如何挂载本地文件 只需要在 yaml 文件里面添加两处 一处在 container 里面 另外一处添加到跟 container 同级 volumeMounts: - name: v1 mountPath: /app volumes: - name: v1 hostPath: path: /home/zzg/web 完整 yaml 文件如下 apiVersion: apps/v1 kind: Deployment metadata: name: mygin namespace: myweb spec: selector: matchLabels: app: mygin replicas: 1 template: metadata: labels: app: mygin spec: nodeSelector: name: a1 containers: - name: mygintest image: alpine:3.12 # 只有镜像不存在时进行</description>
    </item>
    
    <item>
      <title>主机调度nodeName和nodeSelector</title>
      <link>/posts/%E4%B8%BB%E6%9C%BA%E8%B0%83%E5%BA%A6nodename%E5%92%8Cnodeselector/</link>
      <pubDate>Sat, 12 Jun 2021 07:32:04 +0800</pubDate>
      
      <guid>/posts/%E4%B8%BB%E6%9C%BA%E8%B0%83%E5%BA%A6nodename%E5%92%8Cnodeselector/</guid>
      <description>主机调度的选择 可以在 yaml 文件里面 spce（规格）节点下添加 nodeName: god2 #表示在节点2部署 或者可以指定节点标签的方式 怎么定义节点标签 获取标签列表 kubectl get node --show-labels 添加标签： kubectl label nodes &amp;lt;node-name&amp;gt; &amp;lt;label-key&amp;gt;=&amp;lt;label-value&amp;gt; kubectl label nodes god2 name=a2 删除标签 kubectl label nodes &amp;lt;node-name&amp;gt; &amp;lt;label-key&amp;gt;- kubectl label nodes dsjs name- 修</description>
    </item>
    
    <item>
      <title>controller、deployment、service入门</title>
      <link>/posts/deploymentcontrollerservice%E5%85%A5%E9%97%A8/</link>
      <pubDate>Fri, 11 Jun 2021 18:03:33 +0800</pubDate>
      
      <guid>/posts/deploymentcontrollerservice%E5%85%A5%E9%97%A8/</guid>
      <description>kube-controller-manager 是什么 在master中。 kube-controller-manager负责节点管理、pod复制和endpoint创建. 监控集群中各种资源的状态使之和定义的状态保持一致,.\ 如: 节点控制器（Node C</description>
    </item>
    
    <item>
      <title>kubelet初步了解</title>
      <link>/posts/kubelet%E5%88%9D%E6%AD%A5%E4%BA%86%E8%A7%A3/</link>
      <pubDate>Fri, 11 Jun 2021 16:00:50 +0800</pubDate>
      
      <guid>/posts/kubelet%E5%88%9D%E6%AD%A5%E4%BA%86%E8%A7%A3/</guid>
      <description>kubelet 是什么 负责master和节点（node）之间的通信、交互和数据上报 到master的apiserver 主要职责是什么 1、Node管理 2、pod管理 3、容器健康检查 4、容器监控 5、资源清理 6、和容器运行</description>
    </item>
    
    <item>
      <title>Etcd</title>
      <link>/posts/etcd/</link>
      <pubDate>Thu, 10 Jun 2021 09:37:50 +0800</pubDate>
      
      <guid>/posts/etcd/</guid>
      <description>etcd是什么 etcd是一个高可用的键值存储系统 它由CoreOS开发并维护的 灵感来自于 ZooKeeper 它使用Go语言编写 使用场景有那些 1、主要用于共享配置 2、服务注册与发现 3、分布式锁等 使用docke把镜像干下来 由</description>
    </item>
    
    <item>
      <title>K8s服务发现</title>
      <link>/posts/k8s%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/</link>
      <pubDate>Tue, 08 Jun 2021 16:34:40 +0800</pubDate>
      
      <guid>/posts/k8s%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/</guid>
      <description>在rancher中部署服务，会自动注册服务名称，如图所示： 你的程序想访问集群其他服务 只需要 访问服务名即可 如 mygo 是一个gin框架 http服务 你只需要请求 http://mygo 即可 自动会帮你进行服务发现 有时候访问不了，需要干掉</description>
    </item>
    
    <item>
      <title>Kubenetes基础知识</title>
      <link>/posts/kubenetes%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Mon, 31 May 2021 16:07:24 +0800</pubDate>
      
      <guid>/posts/kubenetes%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>kubennetes基础架构</description>
    </item>
    
  </channel>
</rss>
