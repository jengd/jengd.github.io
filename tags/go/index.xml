<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on JenG</title>
    <link>/tags/go/</link>
    <description>Recent content in Go on JenG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 31 Aug 2021 16:55:24 +0800</lastBuildDate><atom:link href="/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>让GO开局就让代码有mvc的感觉</title>
      <link>/posts/%E8%AE%A9go%E5%BC%80%E5%B1%80%E5%B0%B1%E8%AE%A9%E4%BB%A3%E7%A0%81%E6%9C%89mvc%E7%9A%84%E6%84%9F%E8%A7%89/</link>
      <pubDate>Tue, 31 Aug 2021 16:55:24 +0800</pubDate>
      
      <guid>/posts/%E8%AE%A9go%E5%BC%80%E5%B1%80%E5%B0%B1%E8%AE%A9%E4%BB%A3%E7%A0%81%E6%9C%89mvc%E7%9A%84%E6%84%9F%E8%A7%89/</guid>
      <description>让GO开局就让代码有mvc的感觉 package main import &amp;#34;net/http&amp;#34; // 开局就让代码有mvc的感觉 type IndexCtl struct { w http.ResponseWriter } func (this *IndexCtl) Index(req *http.Request) { this.w.Write([]byte(&amp;#34;this is index&amp;#34;)) } func (this *IndexCtl) Users(req *http.Request) { this.w.Write([]byte(&amp;#34;user-lise&amp;#34;)) } //转化函数 func web(f func(ctl *IndexCtl, req *http.Request)) http.Handler { return http.HandlerFunc(func(writer http.ResponseWriter, req *http.Request) { f(&amp;amp;IndexCtl{w: writer}, req) }) } func main() { router := http.NewServeMux() router.Handle(&amp;#34;/&amp;#34;, web((*IndexCtl).Index)) router.Handle(&amp;#34;/users&amp;#34;, web((*IndexCtl).Users)) http.ListenAndServe(&amp;#34;:8080&amp;#34;, router) }</description>
    </item>
    
    <item>
      <title>Go语言一些库</title>
      <link>/posts/go%E8%AF%AD%E8%A8%80%E4%B8%80%E4%BA%9B%E5%BA%93/</link>
      <pubDate>Fri, 27 Aug 2021 09:06:25 +0800</pubDate>
      
      <guid>/posts/go%E8%AF%AD%E8%A8%80%E4%B8%80%E4%BA%9B%E5%BA%93/</guid>
      <description>查看包关系图 https://github.com/ofabry/go-callvis The purpose of this tool is to provide developers with a visual overview of a Go program using data from call graph and its relations with packages and types. curl-to-Go mholt.github.io/curl-to-go https://mholt.github.io/json-to-go/</description>
    </item>
    
    <item>
      <title>从一个web项目来谈Go语言的技能点</title>
      <link>/posts/%E4%BB%8E%E4%B8%80%E4%B8%AAweb%E9%A1%B9%E7%9B%AE%E6%9D%A5%E8%B0%88go%E8%AF%AD%E8%A8%80%E7%9A%84%E6%8A%80%E8%83%BD%E7%82%B9/</link>
      <pubDate>Mon, 24 May 2021 13:18:00 +0800</pubDate>
      
      <guid>/posts/%E4%BB%8E%E4%B8%80%E4%B8%AAweb%E9%A1%B9%E7%9B%AE%E6%9D%A5%E8%B0%88go%E8%AF%AD%E8%A8%80%E7%9A%84%E6%8A%80%E8%83%BD%E7%82%B9/</guid>
      <description>转自 Junedayday 公众号 从一个Web项目开始 经过了 入门篇 的学习，大家已经初步了解Go语言的语法，也能写常见的代码了。接下来，我们就从一个Web项目入手，看看一些常见的技能与知识吧。 我们先简单地聊一下这个Web项目</description>
    </item>
    
  </channel>
</rss>
